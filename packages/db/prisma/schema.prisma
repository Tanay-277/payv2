generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["omitApi"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                   String              @id @default(uuid())
  name                 String
  email                String?             @unique
  number               String              @unique
  password             String
  Balance              Balance?
  OnRampTransaction    OnRampTransaction[]
  sentTransactions     P2PTransaction[]    @relation("SentTransactions")
  receivedTransactions P2PTransaction[]    @relation("ReceivedTransactions")

  @@index([email])
  @@index([number])
}

model Merchant {
  id        String   @id @default(uuid())
  email     String   @unique
  name      String
  auth_type AuthType

  @@index([email])
}

model Balance {
  id     Int    @id @default(autoincrement())
  userId String @unique
  amount Int
  locked Int
  user   User   @relation(fields: [userId], references: [id])
}

model P2PTransaction {
  id         String            @id @default(uuid())
  senderId   String
  receiverId String
  amount     Int
  timestamp  DateTime          @default(now())
  sender     User              @relation("SentTransactions", fields: [senderId], references: [id])
  receiver   User              @relation("ReceivedTransactions", fields: [receiverId], references: [id])
  status     TransactionStatus

  @@index([senderId])
  @@index([receiverId])
}

model OnRampTransaction {
  id        String            @id @default(uuid())
  token     String
  provider  String
  amount    Int
  startTime DateTime
  userId    String
  user      User              @relation(fields: [userId], references: [id])
  status    TransactionStatus 

  @@index([userId])
}

enum AuthType {
  Google
  Github
}

enum TransactionStatus {
  Success
  Failure
  Pending
}
